import React, { useState, useEffect } from 'react';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import Modal from '../../components/Modal';
import { Spacer } from '@nextui-org/react';

const features = [
    {
        title: "Vaxta q…ôna…ôt v…ô rahatlƒ±q",
        description: "G√ºn√ºn ist…ônil…ôn vaxtƒ±nda, evd…ôn √ßƒ±xmadan v…ô ya i≈üd…ôn ayrƒ±lmadan ist…ôdiyiniz xidm…ôti rezervasiya edin.",
        icon: "üïí",
        additionalInfoTitle: "T…ôhl√ºk…ôsiz v…ô rahat",
        additionalInfoHeading: "H…ôr yerd…ôn v…ô h…ôr zaman",
        additionalInfo: "H…ôr yerd…ôn v…ô h…ôr zaman rezervasiya etm…ôk imkanƒ± il…ô h…ôyatƒ±nƒ±zƒ± daha asan v…ô rahat edin. Siz yalnƒ±z vaxtƒ±nƒ±za q…ôna…ôt etmirsiniz, h…ôm d…ô stressd…ôn uzaqla≈üƒ±rsƒ±nƒ±z."
    },
    {
        title: "H…ôr zaman …ôl√ßatanlƒ±q",
        description: "G√ºn√ºn 24 saatƒ±, h…ôft…ônin 7 g√ºn√º rezervasiya ed…ô bil…ôrsiniz. Artƒ±q i≈ü saatlarƒ±nƒ± g√∂zl…ôm…ôy…ô ehtiyac yoxdur.",
        icon: "üìÖ",
        additionalInfoTitle: "Daimi xidm…ôt",
        additionalInfoHeading: "√áevik v…ô rahat",
        additionalInfo: "Xidm…ôtl…ôrimiz h…ôr zaman …ôl√ßatandƒ±r, bel…ô ki, siz ist…ôdiyiniz zaman rezervasiya ed…ô bil…ôrsiniz. Bu siz…ô m√ºst…ôsna √ßeviklik v…ô rahatlƒ±q verir."
    },
    {
        title: "He√ß bir qarƒ±≈üƒ±qlƒ±q yoxdur",
        description: "Xatƒ±rlatmalar g√∂nd…ôril…ôr…ôk, artƒ±q rezervasiyalar unudulmayacaq.",
        icon: "üìå",
        additionalInfoTitle: "D…ôqiq v…ô asan izl…ôm…ô",
        additionalInfoHeading: "Unutma qorxusu olmadan",
        additionalInfo: "Rezervasiyalarƒ±nƒ±z haqqƒ±nda xatƒ±rlatmalar alaraq, he√ß bir rezervasiyanƒ± unutmayacaqsƒ±nƒ±z. Bu sizin √º√ß√ºn h…ôr ≈üeyin asan v…ô nizamlƒ± qalmasƒ±nƒ± t…ômin edir."
    },
    {
        title: "∆èlav…ô g…ôlirl…ôr",
        description: "∆èlav…ô xidm…ôtl…ôr v…ô m√ºxt…ôlif paketl…ôrd…ôn yararlanƒ±n.",
        icon: "üí∞",
        additionalInfoTitle: "Faydalƒ± t…ôklifl…ôr",
        additionalInfoHeading: "Daha √ßox d…ôy…ôr …ôld…ô edin",
        additionalInfo: "Xidm…ôtl…ôrimiz siz…ô yalnƒ±z …ôsas ehtiyaclarƒ± qar≈üƒ±lamaqdan daha √ßoxunu t…ôklif edir. ∆èlav…ô g…ôlirl…ôr v…ô x√ºsusi paketl…ôrd…ôn istifad…ô ed…ôr…ôk, daha √ßox fayda …ôld…ô ed…ô bil…ôrsiniz."
    }
];

export const FeaturesPage: React.FC = () => {
    const [isModalOpen, setModalOpen] = useState(false);
    const [modalData, setModalData] = useState({ title: "", heading: "", description: "" });
    const [, setWindowSize] = useState(window.innerWidth);

    useEffect(() => {
        const handleResize = () => {
            setWindowSize(window.innerWidth);
        };
        window.addEventListener('resize', handleResize);
        return () => {
            window.removeEventListener('resize', handleResize);
        };
    }, []);

    return (
        <>
            <section className="lg:mx-24 max-sm:mx-12">
                <div className="mt-32 bg-custom-gray-100 rounded-3xl">
                    <div className="pt-10 pl-5">
                        <h1 className="xl:text-6xl text-2xl font-medium mb-6">Niy…ô br10 …ôn yax≈üƒ±sƒ±dƒ±r.</h1>
                        <div id="features" className="flex flex-col items-start justify-start pt-10 w-full pb-10 overflow-x-scroll">
                            <div className="flex w-11/12">
                                {features.map((feature, index) => (
                                    <div
                                        key={index}
                                        className={`${index === 0 ? 'pt-4 pb-4' : index === features.length - 1 ? 'p-4' : 'pl-4 py-4'} h-96 flex-shrink-0 w-full md:w-1/3`}
                                    >
                                        <div className="bg-white cursor-pointer p-6 rounded-3xl h-full flex flex-col justify-between items-end">
                                            <div>
                                                <div className="text-6xl mb-4">{feature.icon}</div>
                                                <div className="text-2xl font-bold mb-2">{feature.title}</div>
                                            <p className="text-gray-600">{feature.description}</p>
                                        </div>
                                        <svg
                                            onClick={() => {
                                                setModalOpen(true);
                                                setModalData({
                                                    title: feature.additionalInfoTitle,
                                                    heading: feature.additionalInfoHeading,
                                                    description: feature.additionalInfo
                                                });
                                            }}
                                            xmlns="http://www.w3.org/2000/svg"
                                            viewBox="0 0 24 24"
                                            fill="currentColor"
                                            className="size-10 flex-shrink-0"
                                        >
                                            <path
                                                fillRule="evenodd"
                                                d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 9a.75.75 0 0 0-1.5 0v2.25H9a.75.75 0 0 0 0 1.5h2.25V15a.75.75 0 0 0 1.5 0v-2.25H15a.75.75 0 0 0 0-1.5h-2.25V9Z"
                                                clipRule="evenodd"
                                            />
                                        </svg>
                                    </div>
                                    </div>
                                    ))}
                            </div>
                        </div>
                    </div>
                    <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>
                        <div className="mx-8 my-10">
                            <h1 className="text-xl font-medium mb-2">{modalData.title}</h1>
                            <h2 className="xl:text-5xl text-4xl font-semibold mb-7">{modalData.heading}</h2>
                            <p className="text-gray-600 text-lg">{modalData.description}</p>
                        </div>
                    </Modal>
                </div>
                <div className="flex flex-col justify-center items-start max-sm:h-[50rem] lg:h-screen mt-10">
                    <span className="text-5xl font-semibold">K…ô≈üf etm…ôy…ô d…ôy…ôr<br /> yenilikl…ôr.</span>
                    <div className="relative">
                        <Spacer y={10}/>
                        <picture>
                            <source srcSet="/assets/watch_our_film_mobile.png" media="(max-width: 640px)"/>
                            <source srcSet="/assets/watch_our_film_xlarge.jpg" media="(min-width: 641px)"/>
                            <img
                                src="/assets/watch_our_film_xlarge.jpg"
                                alt="Watch our film"
                                className="rounded-3xl w-full max-sm:h-[30rem] object-cover"
                            />
                        </picture>
                        <div className="absolute inset-0 flex max-sm:justify-start max-sm:items-center flex-col justify-center items-start text-white p-10">
                            <div className={"max-sm:mt-16 max-sm:text-center"}>
                                <h1 className="text-xl lg:text-3xl md:text-5xl font-bold text-custom-gray-050">br10'un</h1>
                                <span className="text-xl lg:text-3xl md:text-5xl font-bold text-custom-gray-050">
                                inc…ôlikl…ôrin…ô s…ôyah…ôt</span>
                            </div>
                            <button
                                className="max-sm:mt-2 mt-4 px-6 py-2 bg-white text-black font-semibold
                                    rounded-full hover:bg-gray-200">
                                Videonu izl…ô
                            </button>

                        </div>
                    </div>
                </div>
            </section>
        </>
    );
};